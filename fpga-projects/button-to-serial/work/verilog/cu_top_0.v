/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module cu_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg usb_tx,
    input trigger
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_btn_cond_out;
  reg [1-1:0] M_btn_cond_in;
  button_conditioner_2 btn_cond (
    .clk(clk),
    .in(M_btn_cond_in),
    .out(M_btn_cond_out)
  );
  wire [1-1:0] M_click_dtct_out;
  reg [1-1:0] M_click_dtct_in;
  edge_detector_3 click_dtct (
    .clk(clk),
    .in(M_click_dtct_in),
    .out(M_click_dtct_out)
  );
  wire [1-1:0] M_uart_tx_tx;
  wire [1-1:0] M_uart_tx_busy;
  reg [1-1:0] M_uart_tx_block;
  reg [8-1:0] M_uart_tx_data;
  reg [1-1:0] M_uart_tx_new_data;
  uart_tx_4 uart_tx (
    .clk(clk),
    .rst(rst),
    .block(M_uart_tx_block),
    .data(M_uart_tx_data),
    .new_data(M_uart_tx_new_data),
    .tx(M_uart_tx_tx),
    .busy(M_uart_tx_busy)
  );
  reg [7:0] M_count_d, M_count_q = 1'h0;
  
  always @* begin
    M_count_d = M_count_q;
    
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    M_btn_cond_in = trigger;
    M_click_dtct_in = M_btn_cond_out;
    led = M_count_q;
    usb_tx = M_uart_tx_tx;
    M_uart_tx_data = 1'h0;
    M_uart_tx_new_data = 1'h0;
    M_uart_tx_block = 1'h0;
    if (!M_uart_tx_busy && M_click_dtct_out) begin
      M_count_d = M_count_q + 1'h1;
      M_uart_tx_new_data = 1'h1;
      M_uart_tx_data = M_count_q;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_count_q <= 1'h0;
    end else begin
      M_count_q <= M_count_d;
    end
  end
  
endmodule
