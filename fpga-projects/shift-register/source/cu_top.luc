module cu_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output sr_latch,
    output sr_data,
    output sr_clk
  ) {
  
  sig rst;                  // reset signal
  sig sr_input_valid;
  sig sr_data_to_send[8];
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    
    .rst(rst){
      sr_chain_interface sr_chain(#DIVIDE_BY(25000000), 
                                  #WIDTH(8),
                                  .valid_input(sr_input_valid),
                                  .in_data(sr_data_to_send));
      dff count[8](#INIT(0));
      
   }
    

  }
  
  always {
    sr_clk = sr_chain.clock;
    sr_data = sr_chain.data;
    sr_latch = sr_chain.latch;
    
    if (sr_chain.is_sending == 0) {
      sr_input_valid = 1;
      //sr_data_to_send = 8b10101011;
      sr_data_to_send = count.q;
      count.d = count.q + 1;
    }
          
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
  }
}